#include <bits/stdc++.h>


using namespace std;

// Function to check if the password is valid
bool isValidPassword(int length, vector<int>& password) {
    unordered_map<int, int> occurrence_count;
    
    // Count the occurrences of each element in the password
    for (int element : password) {
        occurrence_count[element]++;
    }
    
    // Check if all occurrences are unique
    unordered_set<int> unique_occurrences;
    for (auto& pair : occurrence_count) {
        if (unique_occurrences.count(pair.second) > 0) {
            return false; // Occurrence is not unique
        }
        unique_occurrences.insert(pair.second);
    }
    
    return true;
}

int main() {
    int length;
    cin >> length;
    
    vector<int> password(length);
    
    for (int i = 0; i < length; ++i) {
        cin >> password[i];
    }
    
    if (isValidPassword(length, password)) {
        cout << "true" << endl;
    } else {
        cout << "false" << endl;
    }
    
    return 0;
}
